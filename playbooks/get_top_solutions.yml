---
- hosts: analytics.fold.it
  remote_user: pierce
  vars_files:
    - vars/top.yml
  tasks:
    - name: Verify that the dest directory exists on src
      file: path=~/{{ dest }} state=directory

    - name: Find all puzzles with available data
      shell: 'source ~/.profile && find ~/fetch/ -maxdepth 1 -name "solution_*" -type d -exec find {}/top -maxdepth 1 -name "*.pdb" \; > ~/{{ available_solutions }}'
      args:
        executable: /bin/bash
        creates: "~/{{ available_solutions }}"

    - name: Verify that the dest directory exists on control
      local_action: file path={{ dest }} state=directory

    - name: Fetch the available solutions back to the control machine
      fetch: src=~/{{ available_solutions }} dest={{ available_solutions }} flat=yes

    - name: Run the filtering script on the control machine
      local_action: script bin/filter_already_downloaded.py

    - name: Copy solutions not downloaded back to src
      copy: src={{ remaining_solutions }} dest=~/{{ remaining_solutions }}

    - name: Go get the foldit script
      local_action: shell go get github.com/pedmiston/foldit

    - name: Run the puzzle solutions through the parsing script
      script: ~/go/bin/foldit ~/{{ remaining_solutions }} > ~/{{ solution_data }}
      args:
        creates: "~/{{ solution_data }}"

    - name: Download the data
      fetch: src=~/{{ solution_data }} dest={{ solution_data }}
